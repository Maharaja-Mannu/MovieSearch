{"version":3,"sources":["component/signupComponent.js"],"names":["MyTextInput","label","props","useField","field","meta","for","id","name","touched","error","className","validate","values","errors","username","length","email","password","SignUp","errMsg","to","initialValues","onSubmit","setSubmitting","onSubmitForm","type","placeholder","disabled","isLoading"],"mappings":"0OAKaA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,2BAC1BC,YAASD,GADiB,mBACzCE,EADyC,KAClCC,EADkC,KAEhD,OACI,oCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,IAAKJ,EAAMK,IAAML,EAAMM,MAAOP,GACrC,kBAAC,IAAD,iBAAWG,EAAWF,IACrBG,EAAKI,SAAWJ,EAAKK,MAClB,2BAAOC,UAAU,eAAeN,EAAKK,OACrC,QAMdE,EAAW,SAAAC,GACb,IAAMC,EAAS,GAgBf,OAfKD,EAAOE,SAEDF,EAAOE,SAASC,OAAS,KAChCF,EAAOC,SAAW,iCAFlBD,EAAOC,SAAW,WAKjBF,EAAOI,QACRH,EAAOG,MAAQ,YAGdJ,EAAOK,SAEDL,EAAOK,SAASF,OAAS,IAChCF,EAAOI,SAAW,gCAFlBJ,EAAOI,SAAW,WAIfJ,GAoCIK,UAjCA,SAACjB,GAEZ,IAAMQ,EAAQR,EAAMkB,OACpB,OACI,yBAAKT,UAAU,4DACX,uCACED,GAAS,uBAAGC,UAAU,SAASD,GACjC,uDAA4B,kBAAC,IAAD,CAAMW,GAAG,WAAT,YAC5B,kBAAC,IAAD,CACIC,cAAe,CACXP,SAAU,GACVE,MAAO,GACPC,SAAU,IAEdN,SAAUA,EACVW,SAAU,SAACV,EAAD,GAA+B,EAApBW,cACjBtB,EAAMuB,aAAaZ,EAAOE,SAAUF,EAAOI,MAAOJ,EAAOK,YAI7D,kBAAC,IAAD,KACI,kBAAClB,EAAD,CAAaC,MAAM,OAAOyB,KAAK,OAAOlB,KAAK,WAAWmB,YAAY,eAClE,kBAAC3B,EAAD,CAAaC,MAAM,QAAQyB,KAAK,QAAQlB,KAAK,QAAQmB,YAAY,gBACjE,kBAAC3B,EAAD,CAAaC,MAAM,WAAWyB,KAAK,WAAWlB,KAAK,WAAWmB,YAAY,mBAC1E,kBAAC,IAAD,CAAQD,KAAK,SAASE,SAAU1B,EAAM2B,WAAY3B,EAAM2B,UAAY,kBAAoB","file":"static/js/8.831209c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form, useField } from \"formik\";\r\n\r\nexport const MyTextInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props)\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                <Label for={props.id || props.name}>{label}</Label>\r\n                <Input {...field} {...props} />\r\n                {meta.touched && meta.error ? (\r\n                    <small className=\"text-danger\">{meta.error}</small>\r\n                ) : null}\r\n            </FormGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n    if (!values.username) {\r\n        errors.username = 'Required'\r\n    } else if (values.username.length > 20) {\r\n        errors.username = 'Must be 20 characters or less'\r\n    } \r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    } \r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required'\r\n    } else if (values.password.length < 8) {\r\n        errors.password = 'Must be 8 characters or more'\r\n    }\r\n    return errors\r\n} \r\n\r\nconst SignUp = (props) => {\r\n\r\n    const error = props.errMsg\r\n    return (\r\n        <div className=\"col-sm-6 offset-sm-3 col-md-4 offset-md-4 text-left mt-5\">\r\n            <h1>Sign Up</h1>\r\n            { error && <p className='error'>{error}</p> }\r\n            <p>Already have an account? <Link to=\"/signin\">Sign in</Link></p>\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    email: '',\r\n                    password: '',\r\n                }}\r\n                validate={validate}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    props.onSubmitForm(values.username, values.email, values.password)\r\n                    \r\n                }}\r\n            >\r\n                <Form>\r\n                    <MyTextInput label=\"Name\" type=\"text\" name=\"username\" placeholder=\"Enter name\" />\r\n                    <MyTextInput label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Enter email\" />\r\n                    <MyTextInput label=\"Password\" type=\"password\" name=\"password\" placeholder=\"Enter password\" />\r\n                    <Button type=\"submit\" disabled={props.isLoading}>{props.isLoading ? 'Please wait ...' : 'Submit'}</Button>\r\n                </Form>\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SignUp"],"sourceRoot":""}